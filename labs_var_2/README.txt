Обратите внимание:  
                
                - В среде IDE ( например, Eclipse)  есть возможность ввести параметры из командной строки.
                - Обработка ошибок должна быть сделана для всех заданий, если есть ввод параметров. 
                - Введенные параметры и результаты работы должны выводиться на дисплей (вместе с соответствующими пояснениями, если это необходимо для понимания решенной задачи ).
                - Поток выполнения  имеет имя по умолчанию, которое нужно получить во время выполнения с помощью метода Thread.currentThread.getName().
                - 3 и 4 задания для потоков выполнения предполагают выполнение потоков четко по очереди.

1. Создать приложение с 2 параметрами, которое вычислит количество лет ,за которые сумма денег,положенная в банк, должна удвоится. В качестве параметров задаются  любые  неотрицательные  числа. 
1-ое число - количество денег, 2-ое число-годовой  процент. Учесть, что проценты начисляются раз в месяц и капитализируются.
Сосчитать и вывести на дисплей результат подсчета.

2. Создать приложение с 3 классами-Артист , Циркач, Танцор и  интерфейсами Выступающий , Гастролер. 
Класс Артист является родительским для классов Циркач и Танцор , Интерфейс Выступающий  является родительским для интерфейса Гастролер.
Класс Циркач реализует интерфейс Гастролер.  Класс Танцор реализует интерфейс Выступающий . 
Интерфейс Выступающий  содержит метод "Выступать на концерте", класс Артист содержит метод "Работать для публики", интерфейс Гастролер содержит метод Гастролировать. Класс Циркач содержит метод "Выступать на арене".
Класс Танцор  содержит метод Танцевать.
Все методы выводят строку с именем своего класса или интерфейса и именем метода.
 Создать минимальное число объектов для выполнения всех указанных 5 методов. 
и выполнить все эти методы.
Привести эти объекты к общему типу и опять выполнить все методы

3. Создать 2 потока, один из которых генерирует случайным образом 2  числа Фибоначчи  в разделенные между потоками переменные , 
а другой считывает эти числа , и выводит на печать сумму этих чисел.
Задать с помощью параметра сколько раз выполняется цикл в программе.
Выводить записываемые числа   для первого потока и сумму для второго потока. Выполнить задание   с использованием конструкции synchronized . 
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.
(
Числа Фибоначчи — элементы числовой последовательности
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765,  … 
в которой каждое последующее число равно сумме двух предыдущих чисел. )

4. Создать многопотоковое приложение с 2 параметрами. Количество потоков "Рабочий" задано параметром. Первый рабочий вытачивает деталь и кладет ее на конвейер. Каждый следующий рабочий берет ее с конвейера , модифицирует и снова отправляет на конвейер следующему работнику.
Количество деталей тоже задается параметром. Каждый рабочий не берет следующую деталь, пока не закончил с предыдущей.
Использовать ограничения из задания 3. 
Выводить на дисплей название детали и имя рабочего.Вывод может быть например такой: деталь1- рабочий1
                деталь2 -рабочий1
                деталь3 -рабочий1
                деталь1- рабочий2
                деталь1 -рабочий3
                деталь2 -рабочий2
                деталь1 -рабочий4
                деталь2 -рабочий3
                ................

5. Создать  приложение с пользовательским интерфейсом для заданий 1-4. Для этого приложения должна быть реализована возможность выбора из списка любого приложения и его выполнение. 
Модифицировать задания 1-4 так, чтобы весь вывод происходил в текстовых областях . 
Т. е это должно быть не приложение командной строки , а полностью  графическое приложение. Не используйте в приложении всплывающие окна.

6.  Создать приложение для мобильного телефона , которое демонстрирует 3 вида списков List: IMPLICIT, EXCLUSIVE и MULTIPLE .  
Выбор элементов из списков должен отображаться ,  например , с помощью алертов.

7. Создать бизнес-приложение или приложение-игру для мобильного телефона . Подготовить отчет этого курсового проекта в электронном виде. В отчете необходимо 
наличие титульного листа, диаграмм классов, описания предназначения классов и методов, скриншотов и кода приложения в конце.
